{"version":3,"sources":["FormatOutput.js","LoanCalculator.js","calculate.js","firebase.js","TargetCalculator.js","App.js","serviceWorker.js","index.js"],"names":["FormatOutput","props","output","periods","outputFrequency","calculatorType","isNaN","LoanCalculator","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","balance","interest","payment","minpayment","snowball","updateState","bind","assertThisInitialized","handleSubmit","param","event","setState","defineProperty","parseFloat","target","value","preventDefault","new_periods","excess","Math","round","payoffTime","new_output","react_default","a","createElement","onSubmit","type","min","onChange","style","width","checked","updateCheck","step","FormControl_default","InputLabel_default","Select_default","native","Button_default","variant","color","class","React","Component","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","TabularResults","first","ExpansionPanel_default","ExpansionPanelSummary_default","expandIcon","ExpandMore_default","ExpansionPanelDetails_default","Table_default","tableLayout","TableHead_default","TableRow_default","TableCell_default","align","TableBody_default","second","third","fourth","TargetCalculator","username","amount","principal","frequency","total","quartiles","results","pow","periodsToTarget","database","ref","set","_this2","once","data","val","Calculator","calculator","src_TargetCalculator","src_LoanCalculator","Card_default","maxWidth","margin","padding","backgroundColor","overflowX","CardActions_default","inputProps","name","id","ReactDOM","render","App_Calculator","document","getElementById","Boolean","window","location","hostname","match","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.311da033.chunk.js","sourcesContent":["//generates output for user, with time units specified by user\r\nfunction FormatOutput(props) {\r\n    let output = '';\r\n    if (props.periods < 0) {\r\n        return output;\r\n    }\r\n    if (props.outputFrequency === 1) {\r\n        output += 'Years'\r\n    } else if (props.outputFrequency === 12) {\r\n        output += 'Months'\r\n    }\r\n\r\n    if (props.calculatorType === 1) {\r\n        output += ' left until savings target: ';\r\n    } else {\r\n        output += ' left until debt payoff: ';\r\n    }\r\n        \r\n    if (isNaN(props.periods)) {\r\n        output += props.periods;\r\n    } else {\r\n        output += props.periods;\r\n    }\r\n    return output;\r\n    \r\n}  \r\n\r\nexport default FormatOutput;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Button from '@material-ui/core/Button';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\n//import firebase from './firebase.js';\r\nimport FormatOutput from './FormatOutput.js';\r\nimport {periodsToTarget, payoffTime} from './calculate.js';\r\n\r\n//inputs: loan balance, APR, compound period (default monthly), (minimum) payment\r\n//output - time until loan paid off. also interest paid?\r\nclass LoanCalculator extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        balance: 10000,\r\n        interest: 10,\r\n        payment: 250,\r\n        minpayment: 25,\r\n        snowball: true,\r\n        outputFrequency: 12,\r\n        periods: -1,\r\n        output: ''};\r\n  \r\n      this.updateState = this.updateState.bind(this);\r\n      this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n  \r\n    updateState(param, event) {\r\n      this.setState({[param]: parseFloat(event.target.value)});\r\n      event.preventDefault();\r\n    }\r\n    //same as UpdateState, but don't parse float\r\n    updateCheck(event) {\r\n      this.setState({snowball: !this.state.snowball});\r\n      event.preventDefault();\r\n    }\r\n  \r\n    handleSubmit(event) {\r\n      let new_periods = payoffTime(\r\n        this.state.balance, \r\n        this.state.interest,\r\n        this.state.payment,\r\n        this.state.minpayment,\r\n        this.state.snowball,\r\n        this.state.outputFrequency);\r\n\r\n      let new_output = FormatOutput(\r\n        {outputFrequency: this.state.outputFrequency, \r\n        periods: new_periods, \r\n        calculatorType: 2})\r\n\r\n      this.setState({periods:new_periods, output: new_output});\r\n      event.preventDefault();\r\n    }\r\n  \r\n    render() {\r\n      return(\r\n        <div>\r\n          <p></p>\r\n          <form onSubmit = {this.handleSubmit}>\r\n            <label>\r\n              Balance: $&nbsp; \r\n              <input type=\"number\" value={this.state.balance} \r\n              min = {0} \r\n              onChange={this.updateState.bind(this, \"balance\")}\r\n              style={{width:'80px'}}/>\r\n            </label>\r\n            <p></p>\r\n            <label>\r\n              Monthly payment: $&nbsp; \r\n              <input type=\"number\" value={this.state.payment} \r\n              min = {0} \r\n              onChange={this.updateState.bind(this, \"payment\")}\r\n              style={{width:'60px'}}/>\r\n            </label>\r\n            <p></p>\r\n            <label>\r\n              Minimum payment: $&nbsp; \r\n              <input type=\"number\" value={this.state.minpayment} \r\n              min = {0} \r\n              onChange={this.updateState.bind(this, \"minpayment\")}\r\n              style={{width:'60px'}}/>\r\n            </label>\r\n            <label>\r\n              &nbsp;Snowball&nbsp; \r\n              <input type=\"checkbox\" checked={this.state.snowball} \r\n              onChange={this.updateCheck.bind(this)}\r\n              />\r\n            </label>\r\n            <p></p>\r\n            <label>\r\n              APR:&nbsp; \r\n              <input type=\"number\" step = \"0.01\" value={this.state.interest} \r\n              min = {0}\r\n              onChange={this.updateState.bind(this, \"interest\")}\r\n              style={{width:'37px'}}/>\r\n            </label>\r\n            &nbsp;%\r\n            <p></p>\r\n            \r\n            <FormControl>\r\n              <InputLabel>Time period</InputLabel>\r\n              <Select \r\n                native\r\n                value = {this.state.outputFrequency} \r\n                onChange={this.updateState.bind(this, \"outputFrequency\")}\r\n                >\r\n                <option value = {1}>years</option>\r\n                <option value = {12}>months</option>\r\n              </Select>\r\n            </FormControl>\r\n            <p></p>\r\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\">Calculate</Button><p></p>\r\n          </form>\r\n          <p class=\"output\">{this.state.output}</p>\r\n        </div>\r\n      );\r\n    }\r\n}\r\n\r\nexport default LoanCalculator;","//compute periods until savings target is reached. periods is years, months, 2-weeks, or weeks, based\r\n//on selected contribution frequency. \r\nfunction periodsToTarget(target, principal, amount, interest, frequency, outputFrequency) {\r\n    //alert(\"frequency\" + frequency);\r\n\r\n    let total = principal;\r\n    let periods = 0;\r\n    //intermediate targets for 25% of target, 50%, etc.\r\n    let quartiles = [0.25*target, 0.5*target, 0.75*target, target]\r\n    let results = {first:-1, second:-1, third:-1, fourth:-1}\r\n    \r\n    //adjust interest rate based on frequency by taking it to the power of 1/frequency\r\n    //this ensures that savings grow at a rate equivalent to the inputted interest rate compounded annually\r\n    //e.g. if annual interest is 1.05, then monthly interest has to be 1.05^(1/12) so that compounding once per month\r\n    //leads to the same growth as compounding once per year at 1.05\r\n    interest = Math.pow(1 + 0.01*interest, 1/frequency);\r\n    \r\n    if (amount < 0) {\r\n      return \"forever\";\r\n    }\r\n    while (total < target) {\r\n      total += amount;\r\n      total *= interest;\r\n      periods += 1;\r\n\r\n      //determine whether running total has exceeded each quartile\r\n      if ((total > quartiles[0]) && (results.first === -1)) {\r\n        //round number of periods to first decimal place, and multiple by ratio between \r\n        //number of output periods per year and number of contribution periods per year\r\n        results.first = Math.round(periods*(outputFrequency/frequency)*10) / 10;\r\n      }\r\n      if ((total > quartiles[1]) && (results.second === -1)) {\r\n        results.second = Math.round(periods*(outputFrequency/frequency)*10) / 10;\r\n      }\r\n      if ((total > quartiles[2]) && (results.third === -1)) {\r\n        results.third = Math.round(periods*(outputFrequency/frequency)*10) / 10;\r\n      }\r\n      if (periods > 100000) {\r\n        return \"forever\";\r\n      }\r\n \r\n    }\r\n    results.fourth = Math.round(periods*(outputFrequency/frequency)*10) / 10;\r\n    return results\r\n}\r\n\r\n//calculate time required to pay off a loan balance\r\nfunction payoffTime(balance, interest, payment, minpayment, snowball, outputFrequency) {\r\n    let periods = 0;\r\n    interest = 1 + 0.01*(interest/12); //assume monthly payment and APR interest for now\r\n    if (payment <= 0) {\r\n      return \"forever\";\r\n    }\r\n    //track cumulative payments in excess of minimum payments\r\n    let excess = 0;\r\n    while (balance > 0) {\r\n      excess += (payment - minpayment);\r\n      balance -= payment;\r\n      if (snowball) {\r\n        //subtract interest savings from excess payments\r\n        balance -= ((interest - 1) * excess);\r\n      }\r\n      \r\n      balance *= interest;\r\n      if (periods > 10000) {\r\n        return \"forever\";\r\n      }\r\n      periods += 1;\r\n    }\r\n    //alert(periods);\r\n    return Math.round(periods*(outputFrequency/12)*10) / 10;\r\n  }\r\n\r\nexport {periodsToTarget, payoffTime};","//firebase config\r\n\r\nimport * as firebase from 'firebase';\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyCk5EjETCDHcJ-OtYGLr4DYHJukqJS1i7A\",\r\n    authDomain: \"savings-calculator-1251a.firebaseapp.com\",\r\n    databaseURL: \"https://savings-calculator-1251a.firebaseio.com\",\r\n    projectId: \"savings-calculator-1251a\",\r\n    storageBucket: \"savings-calculator-1251a.appspot.com\",\r\n    messagingSenderId: \"54993090529\"\r\n};\r\n\r\nfirebase.initializeApp(config);\r\n\r\nexport default firebase;","import React, { Component } from 'react';\r\nimport './App.css';\r\n//import ReactDOM from 'react-dom';\r\nimport Button from '@material-ui/core/Button';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\n//import { withStyles } from '@material-ui/core/styles';\r\n//import Card from '@material-ui/core/Card';\r\n//import CardActions from '@material-ui/core/CardActions';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport firebase from './firebase.js';\r\nimport FormatOutput from './FormatOutput.js';\r\nimport {periodsToTarget, payoffTime} from './calculate.js';\r\n\r\nclass TargetCalculator extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {username: 'Jim',\r\n                  target: 100000, \r\n                  amount: 1000, \r\n                  interest: 5, \r\n                  principal: 0,\r\n                  frequency: 1,\r\n                  periods: {first:-1, second: -1, third: -1, fourth: -1},\r\n                  outputFrequency: 1,\r\n                  output: ''};\r\n      this.updateState = this.updateState.bind(this);\r\n      this.handleSubmit = this.handleSubmit.bind(this);\r\n      \r\n    }\r\n  \r\n    //removed - deprecated. child calculators no longer use props to determine whether to show\r\n    /*componentWillReceiveProps(nextProps) {\r\n      this.setState({ show: nextProps.show });  \r\n    }*/\r\n    \r\n    \r\n    /*\r\n    periodsToTarget(target, principal, amount, interest, frequency, outputFrequency) {\r\n      //alert(\"frequency\" + frequency);\r\n  \r\n      let total = principal;\r\n      let periods = 0;\r\n      //intermediate targets for 25% of target, 50%, etc.\r\n      let quartiles = [0.25*target, 0.5*target, 0.75*target, target]\r\n      let results = {first:-1, second:-1, third:-1, fourth:-1}\r\n      \r\n      //adjust interest rate based on frequency by taking it to the power of 1/frequency\r\n      //this ensures that savings grow at a rate equivalent to the inputted interest rate compounded annually\r\n      //e.g. if annual interest is 1.05, then monthly interest has to be 1.05^(1/12) so that compounding once per month\r\n      //leads to the same growth as compounding once per year at 1.05\r\n      interest = Math.pow(1 + 0.01*interest, 1/frequency);\r\n      \r\n      if (amount < 0) {\r\n        return \"forever\";\r\n      }\r\n      while (total < target) {\r\n        total += amount;\r\n        total *= interest;\r\n        periods += 1;\r\n  \r\n        //determine whether running total has exceeded each quartile\r\n        if ((total > quartiles[0]) && (results.first === -1)) {\r\n          //round number of periods to first decimal place, and multiple by ratio between \r\n          //number of output periods per year and number of contribution periods per year\r\n          results.first = Math.round(periods*(outputFrequency/frequency)*10) / 10;\r\n        }\r\n        if ((total > quartiles[1]) && (results.second === -1)) {\r\n          results.second = Math.round(periods*(outputFrequency/frequency)*10) / 10;\r\n        }\r\n        if ((total > quartiles[2]) && (results.third === -1)) {\r\n          results.third = Math.round(periods*(outputFrequency/frequency)*10) / 10;\r\n        }\r\n        if (periods > 100000) {\r\n          return \"forever\";\r\n        }\r\n   \r\n      }\r\n      results.fourth = Math.round(periods*(outputFrequency/frequency)*10) / 10;\r\n      return results\r\n    }*/\r\n    \r\n    updateState(param, event) {\r\n      this.setState({[param]: parseFloat(event.target.value)});\r\n      event.preventDefault();\r\n    }\r\n    \r\n    handleSubmit(event) {\r\n      let new_periods = periodsToTarget(\r\n        this.state.target, \r\n        this.state.principal, \r\n        this.state.amount, \r\n        this.state.interest,\r\n        this.state.frequency,\r\n        this.state.outputFrequency);\r\n    \r\n      /*\r\n      test code for setting and reading firebase values\r\n  \r\n      firebase.database().ref('account/Jim').set({\r\n        balance:10010\r\n      });\r\n  \r\n      firebase.database().ref('account/Jim').once('value', function(data) {\r\n        alert(\"balance\" + data.val().balance)\r\n      });*/\r\n      \r\n      let new_output = FormatOutput(\r\n        {outputFrequency: this.state.outputFrequency, \r\n        periods: new_periods.fourth,\r\n        calculatorType: 1});\r\n      \r\n      this.setState({periods:new_periods, output: new_output});\r\n\r\n      firebase.database().ref('account/' + this.state.username).set({\r\n        balance:this.state.principal,\r\n        target: this.state.target,\r\n        interest: this.state.interest\r\n      });\r\n      event.preventDefault();  \r\n    }\r\n    \r\n    //prefill values from firebase\r\n    componentDidMount() {\r\n      firebase.database().ref('account/'+ this.state.username).once('value', (data) => {\r\n        this.setState({principal: data.val().balance,\r\n                      target: data.val().target,\r\n                      interest: data.val().interest});\r\n      });    \r\n    }\r\n    render() {\r\n      return (\r\n      <div>\r\n        <form onSubmit = {this.handleSubmit}>\r\n          <label>\r\n            Savings target: $&nbsp;\r\n            <input type=\"number\" value={this.state.target} min = {0} onChange={this.updateState.bind(this, \"target\")}\r\n            style={{width:'100px'}}/>\r\n          </label>\r\n          <p></p>\r\n          <label>\r\n            Principal: $&nbsp;\r\n            <input type=\"number\" value={this.state.principal} onChange={this.updateState.bind(this, \"principal\")}\r\n            style={{width:'80px'}}/>\r\n            </label>\r\n          <p></p>\r\n          \r\n          <label>\r\n            Contribution: $&nbsp;\r\n            <input type=\"number\" value={this.state.amount} \r\n            min = {this.state.principal > 0 ? 0 : 1} \r\n            onChange={this.updateState.bind(this, \"amount\")}\r\n            style={{width:'70px'}}/>\r\n            &nbsp;\r\n            <Select \r\n              native\r\n              value = {this.state.frequency} \r\n              onChange={this.updateState.bind(this, \"frequency\")}\r\n              >\r\n              <option value = {1}>annually</option>\r\n              <option value = {12}>monthly</option>\r\n              <option value = {26}>biweekly</option>\r\n              <option value = {52}>weekly</option>\r\n            </Select>\r\n            \r\n          </label>\r\n          <p></p>\r\n            <label>\r\n            Interest rate:&nbsp; \r\n            <input type=\"number\" step = \"0.01\" value={this.state.interest} min = {0} \r\n            onChange={this.updateState.bind(this, \"interest\")}\r\n            style={{width:'40px'}}\r\n            />\r\n            &nbsp;%\r\n            </label>\r\n          <p></p>\r\n            <FormControl>\r\n              <InputLabel>Time period</InputLabel>\r\n              <Select \r\n                native\r\n                value = {this.state.outputFrequency} \r\n                onChange={this.updateState.bind(this, \"outputFrequency\")}\r\n                >\r\n                <option value = {1}>years</option>\r\n                <option value = {12}>months</option>\r\n              </Select>\r\n            </FormControl>\r\n          <p></p>\r\n          <Button type=\"submit\" variant=\"contained\" color=\"primary\">Calculate</Button><p></p>\r\n          </form>\r\n        \r\n        <p class=\"output\">{this.state.output}</p>\r\n        <TabularResults periods = {this.state.periods}/>\r\n      </div>);\r\n    }  \r\n  }\r\n\r\n  \r\n  //returns savings target results as a table\r\n  function TabularResults(props) {\r\n    //hide table unless periods have been calculated\r\n    if (props.periods.first < 0) {\r\n      return null;\r\n    }\r\n    return(\r\n      <ExpansionPanel>\r\n        <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\r\n        Detailed results</ExpansionPanelSummary>\r\n        <ExpansionPanelDetails>\r\n            <Table style={{tableLayout:'auto'}}>\r\n              <colgroup>\r\n              <col style={{width:'60%'}}/>\r\n              <col style={{width:'10%'}}/>\r\n              <col style={{width:'10%'}}/>\r\n              <col style={{width:'10%'}}/>\r\n              <col style={{width:'10%'}}/>\r\n              </colgroup>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>Percentage of target</TableCell>\r\n                  <TableCell>25%</TableCell>\r\n                  <TableCell align=\"right\">50%</TableCell>\r\n                  <TableCell align=\"right\">75%</TableCell>\r\n                  <TableCell align=\"right\">100%</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                <TableCell>Time left</TableCell>\r\n                <TableCell>{props.periods.first}</TableCell>\r\n                <TableCell>{props.periods.second}</TableCell>\r\n                <TableCell>{props.periods.third}</TableCell>\r\n                <TableCell>{props.periods.fourth}</TableCell>\r\n              </TableBody>\r\n            </Table>\r\n        </ExpansionPanelDetails>\r\n      </ExpansionPanel>\r\n    )\r\n}\r\n\r\nexport default TargetCalculator;","import React, { Component } from 'react';\nimport './App.css';\nimport ReactDOM from 'react-dom';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\n//import firebase from './firebase.js';\nimport LoanCalculator from './LoanCalculator.js'\nimport TargetCalculator from './TargetCalculator.js'\n\n/* \nto do:\n\nusername input (separate section - menu?). allow adding usernames to store info\ndialog to explain snowball input\ndialog to explain compound interest calculation\nadd tests\nloading animation\n\ntwo calculator options - time until savings target, time until loan is paid off\nCalculator wrapper class calls classes for both calculator types */\n\nclass Calculator extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {calculatorType: 1};\n    this.updateState = this.updateState.bind(this);\n  }\n\n  updateState(param, event) {\n    this.setState({[param]: parseFloat(event.target.value)});\n    event.preventDefault();\n  }\n\n  render() {\n    let calculator;\n    //determine which calculator is shown\n    if (this.state.calculatorType === 1) {\n      calculator = <TargetCalculator />\n    } else {\n      calculator = <LoanCalculator />\n    }\n\n    return (\n      <Card style={{\n        width: '55%',\n        maxWidth: this.state.calculatorType === 1 ? 650:500,\n        margin: 'auto',\n        padding: '20px',\n        backgroundColor: '#eff0f4',\n        overflowX: 'auto'\n      }}>\n        <CardActions>\n        <div>\n          <h3>Savings Calculator</h3>\n          <FormControl>\n          <InputLabel>Calculator Type</InputLabel>\n            <Select native \n            value = {this.state.calculatorType} \n            onChange={this.updateState.bind(this,\"calculatorType\")}\n            inputProps={{\n              name: 'Calculator Type',\n              id: 'calculator-type',\n            }}>\n              <option value = {1}>Time until savings target</option>\n              <option value = {2}>Loan payment calculator</option>\n            </Select>\n          </FormControl>\n          <p></p>\n          {calculator}\n        </div>\n        </CardActions>\n      </Card>\n    );\n  }\n}\n\nReactDOM.render(\n  <Calculator />,\n  document.getElementById('root')\n);\n\nexport default Calculator;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}